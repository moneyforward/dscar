version: 2.1

description: |
  Delta Static Code Analysis Reports running on CircleCI

  This Orb calculates the difference between two static code analysis results. However, the format of the static code analysis result must be Checkstyle XML. Using this Orb, you can get the static code analysis result for the update difference between HEAD branch and its BASE branch.

orbs:
  compare-url: iynere/compare-url@1.2.0
  node: circleci/node@1.1.6

executors:
  default:
    description: Default analysis execution environment
    parameters:
      docker-image:
        description: Specify the image used to execute the analysis
        type: string
        default: circleci/node
      resource_class:
        description: Amount of CPU and RAM allocated to each container in a job.
        type: string
        default: small
    docker:
      - image: << parameters.docker-image >>
    resource_class: << parameters.resource_class >>

commands:
  checkout-analysis-target:
    description: Check out the source code to be analyzed
    parameters:
      path:
        description: "Checkout directory (default: job’s working_directory)"
        type: string
        default: ""
      is-target-branch-base:
        description: Check-out the BASE branch if true is specified
        type: boolean
        default: false
      has-reconstructed:
        description: Specify true if `compare-url/reconstruct` has not been executed yet
        type: boolean
        default: false
      attach-compare-url-workspace:
        description: "Attach a workspace for this command to use? Useful when `compare-url` orb's `reconstruct` job is called upstream in a given workflow"
        type: boolean
        default: false
    steps:
      - when:
          condition: << parameters.path >>
          steps:
            - checkout:
                path: << parameters.path >>
      - unless:
          condition: << parameters.path >>
          steps:
            - checkout
      - when:
          condition: << parameters.is-target-branch-base >>
          steps:
            - unless:
                condition: << parameters.has-reconstructed >> 
                steps:
                  - when:
                      condition: << parameters.path >>
                      steps:
                        - compare-url/reconstruct:
                            debug: true
                            project-path: << parameters.path >>
                  - unless:
                      condition: << parameters.path >>
                      steps:
                        - compare-url/reconstruct:
                            debug: true
                            project-path: '`eval echo $CIRCLE_WORKING_DIRECTORY`'
            - compare-url/use:
                attach-workspace: << parameters.attach-compare-url-workspace >>
                workspace-root: << parameters.path >>
                step-name: Checkout BASE code
                custom-logic: set +e; git checkout $(cat BASE_COMPARE_COMMIT.txt) || git checkout HEAD^
  set-result-path:
    description: Set the save destination of the analysis result in the RESULTS_PATH environment variable
    parameters:
      analysis-name:
        description: Analysis name
        type: string
        default: "true"
      analysis-results-path:
        description: Specify the path to save the analysis results if you need to change it
        type: string
        default: "/tmp/analysis-results"
      is-target-branch-base:
        description: Check-out the BASE branch if true is specified
        type: boolean
        default: false
    steps:
      - run:
          name: export RESULT_PATH
          environment:
            RESULTS_DIR: << parameters.analysis-results-path >>/<< parameters.analysis-name >>
          command: |
              set -x

              mkdir -p "${RESULTS_DIR}"

              if << parameters.is-target-branch-base >>
              then RESULT_FILENAME_PREFIX=BASE
              else RESULT_FILENAME_PREFIX=HEAD
              fi

              echo "export RESULT_PATH=\"${RESULTS_DIR}/${RESULT_FILENAME_PREFIX}-analysis-results.xml\"" >> $BASH_ENV
  set-analysis-result-paths:
    description:
    parameters:
      first-result-path:
        description: Path of the file to use as the minuend
        type: string
        default: ""
      second-result-path:
        description: Path of the file to use as the subtrahend
        type: string
        default: ""
      delta-result-path:
        description: Path to save difference of analysis result
        type: string
        default: ""
      analysis-name:
        description: Analysis name
        type: string
        default: "true"
      analysis-results-path:
        description: Specify the path to save the analysis results if you need to change it
        type: string
        default: "/tmp/analysis-results"
    steps:
      - run:
          name: export FIRST_RESULT_PATH SECOND_RESULT_PATH DELTA_RESULT_PATH
          environment:
            FIRST_RESULT_PATH: << parameters.first-result-path >>
            SECOND_RESULT_PATH: << parameters.second-result-path >>
            DELTA_RESULT_PATH: << parameters.delta-result-path >>
            ANALYSIS_NAME: << parameters.analysis-name >>
            ANALYSIS_RESULTS_PATH: << parameters.analysis-results-path >>
          command: |
              ANALYSIS_RESULTS_DIR="${ANALYSIS_RESULTS_PATH:-/tmp/analysis-results}/${ANALYSIS_NAME:-true}"
              mkdir -p "${ANALYSIS_RESULTS_DIR}"
              cat \<<-EOT >> $BASH_ENV
              export FIRST_RESULT_PATH="${FIRST_RESULT_PATH:-${ANALYSIS_RESULTS_DIR}/HEAD-analysis-results.xml}"
              export SECOND_RESULT_PATH="${SECOND_RESULT_PATH:-${ANALYSIS_RESULTS_DIR}/BASE-analysis-results.xml}"
              export DELTA_RESULT_PATH="${DELTA_RESULT_PATH:-${ANALYSIS_RESULTS_DIR}/DELTA-analysis-results.xml}"
              EOT
  analyze:
    description: Analyze code statically
    parameters:
      should-find:
        description: Specify true if you want to find for analysis targets
        type: enum
        enum: ["true", "false"]
        default: "false"
      patterns-to-include:
        description: Specify patterns to include by regular expression (Multiple patterns can be specified by separating them with line feed)
        type: string
        default: ".*"
      patterns-to-exclude:
        description: Specify patterns to exclude by regular expression (Multiple patterns can be specified by separating them with line feed)
        type: string
        default: ""
      starting-points:
        description: Specify the path of starting to search for files to analyze (Multiple paths can be specified by separating them with line feed)
        type: string
        default: "."
      analysis-command:
        description: The command used for analysis
        type: string
        default: "true"
      analysis-arguments:
        description: Arguments of analysis command
        type: string
        default: ""
      header-command:
        description: The command used for header of analysis result
        type: string
        default: "true"
      header-arguments:
        description: Arguments of header command
        type: string
        default: ""
      footer-command:
        description: The command used for footer of analysis result
        type: string
        default: "true"
      footer-arguments:
        description: Arguments of footer command
        type: string
        default: ""
      transformation-command:
        description: The command used for transformation
        type: string
        default: "cat"
      transformation-arguments:
        description: Arguments of transformation command
        type: string
        default: ""
      result-path:
        description: Path to save analysis result
        type: string
        default: "/dev/null"
      ignore-exit-code:
        description: Specify true if you want the exit code of the analysis step to always return 0.
        type: boolean
        default: false
      prepare:
        description: Specify the required steps before analysis if necessary
        type: steps
        default: []
      step-name:
        description: Specify a analysis step name for this command, if desired
        type: string
        default: Analyze code statically
      redirecting-output:
        description: Specify "/dev/null" if you do not want to display the analysis results on the standard output
        type: enum
        enum: ["/dev/stdout", "/dev/stderr", "/dev/null"]
        default: "/dev/stdout"
      exit-code-threshold:
        description: Specify the upper limit of the exit code that is regarded as normal termination
        type: integer
        default: 124
      no-output-timeout:
        description: Elapsed time the command can run without output. The string is a decimal with unit suffix, such as “20m”, “1.25h”, “5s”
        type: string
        default: 10m
    steps:
      - steps: << parameters.prepare >>
      - run:
          name: << parameters.step-name >>
          environment:
            SHOULD_FIND: << parameters.should-find >>
            STARTING_POINTS: << parameters.starting-points >>
            PATTERNS_TO_INCLUDE: << parameters.patterns-to-include >>
            PATTERNS_TO_EXCLUDE: << parameters.patterns-to-exclude >>
            ANALYSIS_COMMAND: << parameters.analysis-command >>
            HEADER_COMMAND: << parameters.header-command >>
            FOOTER_COMMAND: << parameters.footer-command >>
            TRANSFORMATION_COMMAND: << parameters.transformation-command >>
            PARAM_ANALYSIS_ARGUMENTS: << parameters.analysis-arguments >>
            PARAM_HEADER_ARGUMENTS: << parameters.header-arguments >>
            PARAM_FOOTER_ARGUMENTS: << parameters.footer-arguments >>
            PARAM_TRANSFORMATION_ARGUMENTS: << parameters.transformation-arguments >>
            PARAM_RESULT_PATH: << parameters.result-path >>
          command: |
              set +e -x
              pwd
              {
                if $SHOULD_FIND
                then {
                  echo "$STARTING_POINTS" | awk NF | while read -r path; do printf '%q\n' "$path" || exit $?; done
                  echo '-type f ( -path ""'
                  echo "$PATTERNS_TO_INCLUDE" | awk NF | while read -r pattern; do printf -- '-o -regex %q\n' "$pattern" || exit $? ; done
                  echo ') '
                  echo "$PATTERNS_TO_EXCLUDE" | awk NF | while read -r pattern; do printf '! -regex %q\n' "$pattern" || exit $? ; done
                  echo '-print0'
                } | xargs -t find
                else {
                  echo "$STARTING_POINTS"
                } | tr '\n' '\0'
                fi
              } |
                xargs -0t "${ANALYSIS_COMMAND:-true}" "${ANALYSIS_ARGUMENTS[@]}" ${PARAM_ANALYSIS_ARGUMENTS} |
                cat \
                  <("${HEADER_COMMAND:-true}" "${HEADER_ARGUMENTS[@]}" ${PARAM_HEADER_ARGUMENTS}) \
                  - \
                  <("${FOOTER_COMMAND:-true}" "${FOOTER_ARGUMENTS[@]}" ${PARAM_FOOTER_ARGUMENTS}) |
                "${TRANSFORMATION_COMMAND:-cat}" "${TRANSFORMATION_ARGUMENTS[@]}" ${PARAM_TRANSFORMATION_ARGUMENTS}  |
                tee "${RESULT_PATH:-${PARAM_RESULT_PATH:-/dev/null}}" ><< parameters.redirecting-output >> ||
                test $? -lt << parameters.exit-code-threshold >> || << parameters.ignore-exit-code >>
          no_output_timeout: << parameters.no-output-timeout >>
  calculate:
    description: |
      Calculate the difference between the analysis results

      Use the [checkstyle-reports-combiner][1] command to calculate the difference

      [1]: https://www.npmjs.com/package/junit-reports-combiner
    parameters:
      options:
        description: Specify options for the checkstyle-reports-combiner command
        type: string
        default: ""
      first-result-path:
        description: Path of the file to use as the minuend
        type: string
        default: "HEAD-analysis-results.xml"
      second-result-path:
        description: Path of the file to use as the subtrahend
        type: string
        default: "BASE-analysis-results.xml"
      delta-result-path:
        description: Path to save difference of analysis result
        type: string
        default: "DELTA-analysis-results.xml"
      should-install-node_js:
        description: Specify true if the execution environment does not have Node.js installed
        type: boolean
        default: false
    steps:
      - when:
          condition: << parameters.should-install-node_js >>
          steps:
            - node/install
      - run:
          name: Calculate the difference
          environment:
              COMMAND: checkstyle-reports-combiner
              OPTIONS: << parameters.options >>
              PARAM_FIRST_RESULT_PATH: << parameters.first-result-path >>
              PARAM_SECOND_RESULT_PATH: << parameters.second-result-path >>
              PARAM_DELTA_RESULT_PATH: << parameters.delta-result-path >>
              SELECTOR: //exception|//error
          command: |
              set -x
              sudo apt-get install xmlstarlet
              sudo npm install --global junit-reports-combiner

              TEMP_FILE=$(mktemp)
              NODE_DEBUG="$COMMAND" "$COMMAND" $OPTIONS --operator=except \
                "${FIRST_RESULT_PATH:-${PARAM_FIRST_RESULT_PATH:-HEAD-analysis-results.xml}}" \
                "${SECOND_RESULT_PATH:-${PARAM_SECOND_RESULT_PATH:-BASE-analysis-results.xml}}" |
                tee "$TEMP_FILE" "${DELTA_RESULT_PATH:-${PARAM_DELTA_RESULT_PATH:-/dev/null}}" | xmlstarlet fo
              ! xmlstarlet sel -t -m "$SELECTOR" -v '.' -n < "$TEMP_FILE" >/dev/null
  transform:
    description:
    parameters:
      analysis-name:
        description: Analysis name
        type: string
        default: "true"
      analysis-results-path:
        description: Specify the path to save the analysis results if you need to change it
        type: string
        default: "/tmp/analysis-results"
      test-results-path:
        description: Specify the value of the path parameter in the store_test_results step if you need to change it
        type: string
        default: "/tmp/test-results"
      pattern:
        type: string
        default: ".*"
    steps:
      - run: sudo apt-get install xmlstarlet
      - run:
          name: transform Checkstyle to JUnit
          environment:
              ANALYSIS_NAME: << parameters.analysis-name >>
              ANALYSIS_RESULTS_PATH: << parameters.analysis-results-path >>
              TEST_RESULTS_PATH: << parameters.test-results-path >>
              PATTERN: << parameters.pattern >>
          command: |
              set -x

              XSL_FILE=$(mktemp)
              cat \<<-EOT > "$XSL_FILE"
              <?xml version="1.0" encoding="UTF-8"?>
              <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:output encoding="UTF-8" method="xml"></xsl:output>

                <xsl:template match="/">
                  <testsuites>
                    <xsl:for-each select="//checkstyle">
                      <xsl:apply-templates />
                    </xsl:for-each>
                  </testsuites>
                </xsl:template>

                <xsl:template match="file">
                  <testsuite id="#{generate-id(.)}" package="${ANALYSIS_NAME}" timestamp="`date '+%Y-%m-%dT%H:%M:%S'`" hostname="`hostname`" time="0">
                    <xsl:attribute name="name">
                      <xsl:value-of select="@name" />
                    </xsl:attribute>
                    <xsl:attribute name="tests">
                      <xsl:value-of select="count(error)" />
                    </xsl:attribute>
                    <xsl:attribute name="failures">
                      <xsl:value-of select="count(error)" />
                    </xsl:attribute>
                    <xsl:attribute name="errors">
                      <xsl:value-of select="count(exception)" />
                    </xsl:attribute>
                    <properties />
                    <system-out />
                    <system-err />
                    <xsl:apply-templates select="node()" />
                  </testsuite>
                </xsl:template>

                <xsl:template match="error">
                  <testcase name="#{@source}" classname="${ANALYSIS_NAME}" time="0">
                    <failure type="#{@severity}">
                      <xsl:text>[</xsl:text>
                      <xsl:value-of select="@severity" />
                      <xsl:text>] </xsl:text>
                      <xsl:value-of select="@message" />
                      <xsl:text> - </xsl:text>
                      <xsl:value-of select="@line" />
                      <xsl:text> line, </xsl:text>
                      <xsl:value-of select="number(@column)" />
                      <xsl:text> column in </xsl:text>
                      <xsl:value-of select="../@name" />
                    </failure>
                  </testcase>
                </xsl:template>
              </xsl:stylesheet>
              EOT

              ANALYSIS_RESULTS_PATH="${ANALYSIS_RESULTS_PATH:-/tmp/analysis-results}/${ANALYSIS_NAME:-true}"
              TEST_RESULTS_PATH="${TEST_RESULTS_PATH:-/tmp/test-results}/${ANALYSIS_NAME:-true}"

              find "$ANALYSIS_RESULTS_PATH" -type f -regex "$PATTERN" -printf '%P\n' |
              while read -r RESULT_PATH
              do
                mkdir -p "${TEST_RESULTS_PATH}/`dirname $RESULT_PATH`"
                xmlstarlet tr "$XSL_FILE" < "${ANALYSIS_RESULTS_PATH}/${RESULT_PATH}" > "${TEST_RESULTS_PATH}/${RESULT_PATH}"
              done
  execute:
    description: alculate the difference of static code analysis results between HEAD branch and BASE branch
    parameters:
      has-reconstructed:
        description: Specify true if `compare-url/reconstruct` has not been executed yet
        type: boolean
        default: false
      attach-compare-url-workspace:
        description: "Attach a workspace for this command to use? Useful when `compare-url` orb's `reconstruct` job is called upstream in a given workflow"
        type: boolean
        default: false
      analyze:
        description: Specify analysis steps
        type: steps
        default:
          - analyze
      analysis-name:
        description: Analysis name
        type: string
        default: "true"
      analysis-results-path:
        description: Specify the path to save the analysis results if you need to change it
        type: string
        default: "/tmp/analysis-results"
      calculate:
        description: Specify the steps for calculating the difference
        type: steps
        default:
          - calculate
      project-path:
        description: "Absolute path to your project's base directory, necessary for running git commands (default: job’s working_directory)"
        type: string
        default: ""
    steps:
      # steps to analyze HEAD
      - checkout-analysis-target:
          path: << parameters.project-path >>
      - set-result-path:
          analysis-name: << parameters.analysis-name >>
          analysis-results-path: << parameters.analysis-results-path >>
      - steps: << parameters.analyze >>
      # steps analyze BASE
      - checkout-analysis-target:
          path: << parameters.project-path >>
          is-target-branch-base: true
          has-reconstructed: << parameters.has-reconstructed >>
          attach-compare-url-workspace: << parameters.attach-compare-url-workspace >>
      - set-result-path:
          analysis-name: << parameters.analysis-name >>
          analysis-results-path: << parameters.analysis-results-path >>
          is-target-branch-base: true
      - steps: << parameters.analyze >>
      # steps to calculate the difference
      - set-analysis-result-paths:
          analysis-name: << parameters.analysis-name >>
          analysis-results-path: << parameters.analysis-results-path >>
      - steps: << parameters.calculate >>

jobs:
  analyze:
    description: Analyze code statically
    parameters:
      executor:
        description: Specify the image used to execute analysis
        type: executor
        default: default
      is-target-branch-base:
        description: Check-out the BASE branch if true is specified
        type: boolean
        default: false
      has-reconstructed:
        description: Specify true if `compare-url/reconstruct` has not been executed yet
        type: boolean
        default: false
      attach-compare-url-workspace:
        description: "Attach a workspace for this command to use? Useful when `compare-url` orb's `reconstruct` job is called upstream in a given workflow"
        type: boolean
        default: false
      analysis-name:
        description: Analysis name
        type: string
        default: "true"
      analyze:
        description: Specify analysis steps
        type: steps
        default:
          - analyze
      analysis-results-path:
        description: Specify the path to save the analysis results if you need to change it
        type: string
        default: "/tmp/analysis-results"
      test-results-path:
        description: Specify the value of the path parameter in the store_test_results step if you need to change it
        type: string
        default: "/tmp/test-results"
    executor: << parameters.executor >>
    steps:
      - set-result-path:
          analysis-name: << parameters.analysis-name >>
          analysis-results-path: << parameters.analysis-results-path >>
          is-target-branch-base: << parameters.is-target-branch-base >>
      - checkout-analysis-target:
          is-target-branch-base: << parameters.is-target-branch-base >>
          has-reconstructed: << parameters.has-reconstructed >>
          attach-compare-url-workspace: << parameters.attach-compare-url-workspace >>
      - steps: << parameters.analyze >>
      - transform:
          analysis-name: << parameters.analysis-name >>
          analysis-results-path: << parameters.analysis-results-path >>
          test-results-path: << parameters.test-results-path >>
      - store_test_results:
          path: << parameters.test-results-path >>
  calculate:
    description: |
      Calculate the difference between the analysis results

      Use the [junit-reports-combiner][1] command to calculate the difference

      [1]: https://www.npmjs.com/package/junit-reports-combiner
    parameters:
      executor:
        description: Specify the image used to execute analysis
        type: executor
        default: default
      analysis-name:
        description: Analysis name
        type: string
        default: "true"
      calculate:
        description: Specify the steps for calculating the difference
        type: steps
        default:
          - calculate
      analysis-results-path:
        description: Specify the path to save the analysis results if you need to change it
        type: string
        default: "/tmp/analysis-results"
      test-results-path:
        description: Specify the value of the path parameter in the store_test_results step if you need to change it
        type: string
        default: "/tmp/test-results"
    executor: << parameters.executor >>
    steps:
      - set-analysis-result-paths:
          analysis-name: << parameters.analysis-name >>
          analysis-results-path: << parameters.analysis-results-path >>
      - steps: << parameters.calculate >>
      - transform:
          analysis-name: << parameters.analysis-name >>
          analysis-results-path: << parameters.analysis-results-path >>
          test-results-path: << parameters.test-results-path >>
          pattern: '.*/DELTA-analysis-results\.xml$'
      - store_test_results:
          path: << parameters.test-results-path >>
  execute:
    description: Calculate the difference of static code analysis results between HEAD branch and BASE branch
    parameters:
      executor:
        description: Specify the image used to execute analysis
        type: executor
        default: default
      has-reconstructed:
        description: Specify true if `compare-url/reconstruct` has not been executed yet
        type: boolean
        default: false
      attach-compare-url-workspace:
        description: "Attach a workspace for this command to use? Useful when `compare-url` orb's `reconstruct` job is called upstream in a given workflow"
        type: boolean
        default: false
      analysis-name:
        description: Analysis name
        type: string
        default: "true"
      analyze:
        description: Specify analysis steps
        type: steps
        default:
          - analyze
      calculate:
        description: Specify the steps for calculating the difference
        type: steps
        default:
          - calculate
      analysis-results-path:
        description: Specify the path to save the analysis results if you need to change it
        type: string
        default: "/tmp/analysis-results"
      test-results-path:
        description: Specify the value of the path parameter in the store_test_results step if you need to change it
        type: string
        default: "/tmp/test-results"
    executor: << parameters.executor >>
    steps:
      - execute:
          has-reconstructed: << parameters.has-reconstructed >>
          attach-compare-url-workspace: << parameters.attach-compare-url-workspace >>
          analysis-name: << parameters.analysis-name >>
          analyze: << parameters.analyze >>
          analysis-results-path: << parameters.analysis-results-path >>
          calculate: << parameters.calculate >>
      - transform:
          analysis-name: << parameters.analysis-name >>
          analysis-results-path: << parameters.analysis-results-path >>
          test-results-path: << parameters.test-results-path >>
          pattern: '.*/DELTA-analysis-results\.xml$'
      - store_test_results:
          path: << parameters.test-results-path >>

examples:
  dscar-brakeman:
    description: Calculate Brakeman's analysis results for update difference between HEAD branch and BASE branch
    usage:
      version: 2.1
      orbs:
        dscar: naokikimura/dscar@0.6.0
      workflows:
        analyze-code-statically:
          jobs:
            - dscar/execute:
                name: reek
                executor:
                  name: dscar/default
                  docker-image: circleci/ruby
                pre-steps:
                  - run: sudo gem install reek
                analysis-name: Reek
                analyze:
                  - dscar/analyze:
                      analysis-command: reek
                      analysis-arguments: -f xml
  parallel-analysis:
    description: Execute HEAD and BASE analysis jobs in parallel and calculate the difference by using the results of each in subsequent jobs
    usage:
      version: 2.1
      orbs:
        dscar: naokikimura/dscar@0.6.0
      workflows:
        analyze-code-statically:
          jobs:
            - dscar/analyze: &analyze
                name: analyze head using eslint
                analysis-name: ESLint
                has-reconstructed: true
                executor:
                  name: dscar/default
                  docker-image: circleci/node:10.16.0
                pre-steps:
                  - attach_workspace:
                      at: .
                  - run: npm install
                analysis-results-path: /tmp/workspace/analysis-results
                analyze:
                  - dscar/analyze:
                      prepare: []
                      starting-points: 'client/src/**/*.@(ts|tsx)'
                      analysis-command: npx
                      analysis-arguments: eslint --ext .js,.jsx,.ts,.tsx -f checkstyle
                post-steps:
                  - store_artifacts:
                      path: /tmp/analysis-results
                  - persist_to_workspace:
                      root: /tmp/workspace
                      paths:
                        - analysis-results
                requires:
                  - checkout
            - dscar/analyze:
                <<: *analyze
                name: analyze base using eslint
                is-target-branch-base: true
            - dscar/calculate:
                analysis-name: ESLint
                analysis-results-path: /tmp/workspace/analysis-results
                pre-steps:
                  - attach_workspace:
                      at: /tmp/workspace
                requires:
                  - analyze head using eslint
                  - analyze base using eslint
