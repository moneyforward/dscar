description: |
  Set the environment variables referenced by the calculate command.

  - FIRST_RESULT_PATH
  - SECOND_RESULT_PATH
  - DELTA_RESULT_PATH
parameters:
  analysis-results-path:
    description: Specify the path to save the analysis results if you need to change it
    type: string
    default: "/tmp/analysis-results"
  has-aggregated:
    description: Specify true if analysis results are aggregated
    type: boolean
    default: false
steps:
  - run:
      name: export FIRST_RESULT_PATH SECOND_RESULT_PATH DELTA_RESULT_PATH
      environment:
        ANALYSIS_RESULTS_PATH: << parameters.analysis-results-path >>
      command: |
          set -x

          FIRST_PATHS=()
          SECOND_PATHS=()
          DELTA_PATHS=()
          while read -r DIR
          do
            mkdir -p "${DIR}"
            if << parameters.has-aggregated >>
            then RESULT_FILENAME_PREFIX="${CIRCLE_NODE_INDEX}-"
            else RESULT_FILENAME_PREFIX=
            fi
            FIRST_PATHS+=( "${DIR}/${RESULT_FILENAME_PREFIX}HEAD-analysis-result.xml" )
            SECOND_PATHS+=( "${DIR}/${RESULT_FILENAME_PREFIX}BASE-analysis-result.xml" )
            DELTA_PATHS+=( "${DIR}/${RESULT_FILENAME_PREFIX}DELTA-analysis-result.xml" )
          done < <(
            if << parameters.has-aggregated >>
            then
              NODE_TOTAL=$CIRCLE_NODE_TOTAL
              NODE_INDEX=$CIRCLE_NODE_INDEX
              REGEX=".*/@/[0-9]+-(HEAD|BASE)-analysis-result\.xml"
            else
              NODE_TOTAL=1
              NODE_INDEX=0
              REGEX=".*/${CIRCLE_NODE_INDEX}/(HEAD|BASE)-analysis-result\.xml"
            fi
            ANALYSIS_RESULTS_DIR="${ANALYSIS_RESULTS_PATH:-/tmp/analysis-results}"
            find "${ANALYSIS_RESULTS_DIR}" -type f -regextype posix-extended -regex "$REGEX" |
            while read -r FILE ; do dirname "$FILE" ; done | sort | uniq |
            circleci tests split --show-counts --index=$NODE_INDEX --total=$NODE_TOTAL
          )

          function tostring {
            declare -n PATHS="$1"
            echo "( "
            for INDEX in $(seq 0 $(expr ${#PATHS[*]} - 1 ))
            do
              echo "'${PATHS[INDEX]}'"
            done
            echo " )"
          }

          cat \<<-EOT >> $BASH_ENV
          export FIRST_RESULT_PATH=$(tostring FIRST_PATHS)
          export SECOND_RESULT_PATH=$(tostring SECOND_PATHS)
          export DELTA_RESULT_PATH=$(tostring DELTA_PATHS)
          EOT
